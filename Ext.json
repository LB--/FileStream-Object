{
	"About":
	{
		"Name": "File Stream Object",
		"Author": "Nicholas \"LB\" Braden",
		"Copyright": "Copyright Â© 2016 Nicholas \"LB\" Braden",
		"Comment": "This object allows you to open and manage file streams without loading the files into memory.\nMade by request for Alonso.\nIcon thanks to Alonso.",
		"URL": "http://www.LB-Stuff.com/MMF2/Extensions/",
		"Help": "Help/File Stream/Help.chm",
		"Identifier": "FSTR"
	},

	"ActionMenu":
	[
		"Separator",
		[0, "Open File Stream"],
		[1, "Close File Stream"],
		"Separator",
		[14, "Set Read Cursor Position"],
		[15, "Set Write Cursor Position"],
		"Separator",
		[2, "Set Byte"],
		[3, "Set Short"],
		[4, "Set Int"],
		[5, "Set Float"],
		[6, "Set Double"],
		["Set String",
			["(Optionally) Null Terminated",
				[7, "Encoded as UTF-8"],
				[9, "Encoded as UTF-16"],
			],
			"separator",
			["Length Terminated",
				[12, "Encoded as UTF-8"],
				[13, "Encoded as UTF-16"],
			]
		],
		"Separator",
		[10, "Write Memory to File"],
		[11, "Read File to Memory"],
//		"Separator",
//		[8, "Clear Error State"],
		"Separator"
	],
	"ConditionMenu":
	[
		"Separator",
		[0, "On Error"],
		"Separator",
		[1, "File is Open"],
		[2, "File is OK"],
		"Separator",
		[3, "File Exists/has Read Access"],
		"Separator"
	],
	"ExpressionMenu":
	[
		"Separator",
		[12, "Get Error Message"],
		"Separator",
		[0, "Get Signed Byte"],
		[9, "Get Unsigned Byte"],
		[1, "Get Signed Short"],
		[10, "Get Unsigned Short"],
		[2, "Get Int"],
		[3, "Get Float"],
		[4, "Get Double"],
		["Get String",
			["Null Terminated or Custom Length",
				[5, "Encoded as UTF-8"],
				[11, "Encoded as UTF-16"],
			],
			["Length Terminated",
				[13, "Encoded as UTF-8"],
				[14, "Encoded as UTF-16"]
			]
		],
		"Separator",
		[6, "Get Read Cursor Position"],
		[7, "Get Write Cursor Position"],
		[8, "Get File Size"],
		"Separator"
	],

	"Actions":
	[
		{//0
			"Title": "Open File Stream on %0 in Slot %1 with flags %2",
			"Parameters":
			[
				["String", "Path to File"],
				["Integer", "Slot (will close old stream in slot)"],
				["Integer", "Flags (add together): 1 = read, 2 = write, 4 = clear file contents first, 8 = force append to file"]
			]
		},
		{//1
			"Title": "Close File Stream in Slot %0",
			"Parameters":
			[
				["Integer", "Slot to close"],
			]
		},
		{//2
			"Title": "Slot %0: Set byte at %1 to %2",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Byte (-128 to +127 or 0 to 255)"]
			]
		},
		{//3
			"Title": "Slot %0: Set short at %1 to %2",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Byte (-32768 to +32767 or 0 to 65535)"]
			]
		},
		{//4
			"Title": "Slot %0: Set int at %1 to %2",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Int"]
			]
		},
		{//5
			"Title": "Slot %0: Set float at %1 to %2",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Float", "Float"]
			]
		},
		{//6
			"Title": "Slot %0: Set double at %1 to %2",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Float", "Double"]
			]
		},
		{//7
			"Title": "Slot %0: Set utf-8 string at %1 to %2 (null terminate = %3)",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["String", "String"],
				["Integer", "Null Terminate? 0 = No, anything else = Yes"]
			]
		},
		{//8
			"Title": "[removed in v1.1.0 - please delete this] Slot %0: Clear error state",
			"Parameters":
			[
				["Integer", "Slot"]
			]
		},
		{//9
			"Title": "Slot %0: Set utf-16 string at %1 to %2 (null terminate = %3)",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["String", "String"],
				["Integer", "Null Terminate? 0 = No, anything else = Yes"]
			]
		},
		{//10
			"Title": "Slot %0: Write to %1 from memory at %2, size = %3",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Memory Address to Read from (e.g. Binary Object or Lacewing)"],
				["Integer", "Size of the memory in bytes"]
			]
		},
		{//11
			"Title": "Slot %0: Read from %1 to memory at %2, size = %3",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Memory Address to Write to (e.g. Binary Object or Lacewing)"],
				["Integer", "Size of the memory in bytes"]
			]
		},
		{//12
			"Title": "Slot %0: Set utf-8 string at %1 to %2 (with size prefix)",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["String", "String"]
			]
		},
		{//13
			"Title": "Slot %0: Set utf-16 string at %1 to %2 (with size prefix)",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["String", "String"]
			]
		},
		{//14
			"Title": "Slot %0: Set read cursor position to %1",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//15
			"Title": "Slot %0: Set write cursor position to %1",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		}
	],
	"Conditions":
	[
		{//0
			"Title": "%o: On Error",
			"Triggered": true
		},
		{//1
			"Title": "%o: File in Slot %0 is Open",
			"Parameters":
			[
				["Integer", "Slot to Check"]
			],
			"Triggered": false
		},
		{//2
			"Title": "%o: File in Slot %0 is OK",
			"Parameters":
			[
				["Integer", "Slot to Check"]
			],
			"Triggered": false
		},
		{//3
			"Title": "%o: File path %0 exists/is readable",
			"Parameters":
			[
				["String", "Path to File"]
			],
			"Triggered": false
		}
	],
	"Expressions":
	[
		{//0
			"Title": "SignedByteAt(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//1
			"Title": "SignedShortAt(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//2
			"Title": "IntAt(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//3
			"Title": "FloatAt(",
			"Returns": "Float",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//4
			"Title": "DoubleAt(",
			"Returns": "Float",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//5
			"Title": "String8At$(",
			"Returns": "String",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Length in bytes (-1 for Null Terminated)"]
			]
		},
		{//6
			"Title": "ReadCursorPos(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"]
			]
		},
		{//7
			"Title": "WriteCursorPos(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"]
			]
		},
		{//8
			"Title": "FileSize(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"]
			]
		},
		{//9
			"Title": "UnsignedByteAt(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//10
			"Title": "UnsignedShortAt(",
			"Returns": "Integer",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//11
			"Title": "String16At$(",
			"Returns": "String",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"],
				["Integer", "Length in code points (-1 for Null Terminated)"]
			]
		},
		{//12
			"Title": "LastError$(",
			"Returns": "String"
		},
		{//13
			"Title": "SizedString8At$(",
			"Returns": "String",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		},
		{//14
			"Title": "SizedString16At$(",
			"Returns": "String",
			"Parameters":
			[
				["Integer", "Slot"],
				["Integer", "Position in File (be careful not to exceed the file size)"]
			]
		}
	]
}
